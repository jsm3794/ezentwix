<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="OrderRequest">
    <sql id="insertOrderRequest">
        INSERT INTO order_request (
            request_id, product_name, product_code, purchase_price, mall_name, mall_link, request_qty, received_qty, defective_qty, emp_id, request_status, create_date
        ) VALUES (
            #{request_id}, #{product_name}, #{product_code}, #{purchase_price}, #{mall_name}, #{mall_link}, #{request_qty}, 0, 0, #{emp_id}, #{request_status}, SYSDATE
        )
    </sql>
    <sql id="getNextRequestId">
        SELECT REQUEST_SEQ.NEXTVAL as request_id FROM DUAL
    </sql>

    <sql id="getById">
        SELECT
            o.request_id, o.product_name, o.product_code, o.purchase_price, o.mall_name, o.mall_link, o.request_qty,
            o.received_qty, o.defective_qty, e.emp_id, e.emp_name, o.request_status, o.create_date
        FROM
            order_request o
        INNER JOIN employees e ON o.emp_id = e.emp_id
        WHERE o.request_id = #{request_id}
    </sql>

    <sql id="getAll">
        SELECT
            o.request_id, o.product_name, o.product_code, o.purchase_price, o.mall_name, o.mall_link, o.request_qty,
            o.received_qty, o.defective_qty, e.emp_id, e.emp_name, o.request_status, o.create_date
        FROM
            order_request o
        INNER JOIN employees e ON o.emp_id = e.emp_id
        <where>
            <if test="query != null and query != ''">
                AND o.product_name LIKE '%' || #{query} || '%'
            </if>
            <if test="mall_name != null and mall_name != ''">
                AND o.mall_name LIKE '%' || #{mall_name} || '%'
            </if>
            <if test="request_id != null and request_id != ''">
                AND o.request_id LIKE '%' || #{request_id} || '%'
            </if>
            <if test="order_date_start != null and order_date_start != ''">
                AND o.create_date <![CDATA[>]]>= #{order_date_start}
            </if>
            <if test="order_date_end != null and order_date_end != ''">
                AND o.create_date <![CDATA[<]]>= #{order_date_end}
            </if>
            <if test="emp_name != null and emp_name != ''">
                AND e.emp_name LIKE '%' || #{emp_name} || '%'
            </if>
            <if test="request_status != null and request_status != ''">
                AND o.request_status LIKE '%' || #{request_status} || '%'
            </if>
        </where>
        ORDER BY
        o.request_id DESC
    </sql>

    <!--  -->
        <!-- 발주 정보 가져오기 -->
    <sql id="selectOrderRequestById">
        SELECT request_id, product_code, product_name, purchase_price, mall_name, mall_link, 
               request_qty, received_qty, defective_qty, emp_id, emp_name, request_status, create_date
        FROM order_request
        WHERE request_id = #{requestId}
    </sql>

    <!-- 입고 수량 업데이트 -->
    <sql id="updateReceivedQty">
        UPDATE order_request
        SET received_qty = #{receivedQty}
        WHERE request_id = #{requestId}
    </sql>

    <!-- 불량 수량 업데이트 -->
    <sql id="updateDefectiveQty">
        UPDATE order_request
        SET defective_qty = #{defectiveQty}
        WHERE request_id = #{requestId}
    </sql>
    <!--  -->
    

    <select id="getById" parameterType="int" resultType="orderrequest">
        <include refid="getById"/>
    </select>

    <select id="getAll" resultType="orderrequest">
        <include refid="getAll"/>
    </select>
    <insert id="insertOrderRequest" parameterType="orderrequest">
        <include refid="insertOrderRequest"/>
    </insert>
    <select id="getNextRequestId" resultType="int">
        <include refid="getNextRequestId"/>
    </select>
    <select id="getStatus" resultType="orderTrack">
        <include refid="getStatus"/>
    </select>
</mapper>